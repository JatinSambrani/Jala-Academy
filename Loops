#1. Write a program to print “Bright IT Career” ten times using for loop

for i in range(10):
    print("Jala Academy")

#2. Write a python program to print 1 to 20 numbers using the while loop.
num = 1  # Initialize the starting number

while num <= 10:  # Loop until num is greater than 20
    print(num)  # Print the current number
    num += 1  # Increment num by 1 for the next iteration

#3. Program to equal operator and not equal operators

def compare_numbers(num1, num2):
    if num1 == num2:
        return f"{num1} is equal to {num2}"
    else:
        return f"{num1} is not equal to {num2}"

# Example usage:
number1 = 5
number2 = 7

print(compare_numbers(number1, number2))

number3 = 10
number4 = 10

print(compare_numbers(number3, number4))

#4. Write a program to print the odd and even numbers.

def print_odd_even(start, end):
    print("Odd numbers:")
    for num in range(start, end + 1):
        if num % 2 != 0:
            print(num, end=" ")

    print("\nEven numbers:")
    for num in range(start, end + 1):
        if num % 2 == 0:
            print(num, end=" ")

# Example usage:
print_odd_even(1, 20)

#5. Write a program to print largest number among three numbers.
def find_largest(num1, num2, num3):
    if num1 >= num2 and num1 >= num3:
        return num1
    elif num2 >= num1 and num2 >= num3:
        return num2
    else:
        return num3

# Example usage:
number1 = 5
number2 = 10
number3 = 7

largest = find_largest(number1, number2, number3)
print("The largest number is:", largest)  # Output: The largest number is: 10

#6. Write a program to print even number between 10 and 20 using while
num = 10  # Starting number

print("Even numbers between 10 and 20:")
while num <= 20: # Loop until num is less than or equal to 20
    if num % 2 == 0:  # Check if num is even
        print(num)  # Print the even number
    num += 1  # Increment num by 1 for the next iteration

#7. Write a program to print 1 to 10 using the do-while loop statement.
num = 1

print("Using do-while loop:")
while True:
    print(num)
    num += 1
    if num > 10:
        break

#8. Write a program to find Armstrong number or not
def is_armstrong_number(number):
    # Convert the number to a string to determine its length
    num_str = str(number)
    num_digits = len(num_str)

    # Initialize the sum to 0
    armstrong_sum = 0

    # Iterate through each digit and calculate the sum of each digit raised to the power of the number of digits
    for digit in num_str:
        armstrong_sum += int(digit) ** num_digits

    # Check if the sum is equal to the original number
    if armstrong_sum == number:
        return True
    else:
        return False


# Example usage:
number = 153
if is_armstrong_number(number):
    print(number, "is an Armstrong number")
else:
    print(number, "is not an Armstrong number")

#9. Write a program to find the prime or not.
def is_prime(number):
    if number <= 1:
        return False  # Numbers less than or equal to 1 are not prime

    # Check divisibility from 2 to the square root of the number
    for i in range(2, int(number ** 0.5) + 1):
        if number % i == 0:
            return False  # If the number is divisible by any number in this range, it's not prime
    return True  # If no divisors are found, the number is prime


# Example usage:
number = 17
if is_prime(number):
    print(number, "is a prime number")
else:
    print(number, "is not a prime number")

#10. Write a program to palindrome or not.
def is_palindrome(word):
    # Convert the word to lowercase (if it's a string) to ignore case sensitivity
    word = str(word).lower()

    # Reverse the word
    reversed_word = word[::-1]

    # Check if the original word is equal to its reverse
    if word == reversed_word:
        return True
    else:
        return False


# Example usage:
string = "radar"
if is_palindrome(string):
    print(f'"{string}" is a palindrome')
else:
    print(f'"{string}" is not a palindrome')

number = 12321
if is_palindrome(number):
    print(f"{number} is a palindrome")
else:
    print(f"{number} is not a palindrome")

#11. Program to check whether a number is EVEN or ODD using switch
def is_palindrome(word):
    # Convert the word to lowercase (if it's a string) to ignore case sensitivity
    word = str(word).lower()

    # Reverse the word
    reversed_word = word[::-1]

    # Check if the original word is equal to its reverse
    if word == reversed_word:
        return True
    else:
        return False


# Example usage:
string = "radar"
if is_palindrome(string):
    print(f'"{string}" is a palindrome')
else:
    print(f'"{string}" is not a palindrome')

number = 12321
if is_palindrome(number):
    print(f"{number} is a palindrome")
else:
    print(f"{number} is not a palindrome")

#11. Program to check whether a number is EVEN or ODD using switch
def check_even_odd(number):
    return {
        0: "Even",
        1: "Odd"
    }.get(number % 2, "Invalid")

# Example usage:
number = 5
result = check_even_odd(number)
print(f"The number {number} is {result}")

#12. Print gender (Male/Female) program according to given M/F using switch
def print_gender(gender):
    return {
        'M': "Male",
        'F': "Female"
    }.get(gender, "Invalid gender")

# Example usage:
input_gender = 'M'
print(f"The gender '{input_gender}' corresponds to: {print_gender(input_gender)}")

input_gender = 'F'
print(f"The gender '{input_gender}' corresponds to: {print_gender(input_gender)}")

input_gender = 'Other'
print(f"The gender '{input_gender}' corresponds to: {print_gender(input_gender)}")





